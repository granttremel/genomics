[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ggene"
version = "0.1.0"
description = "A genome browser library for DNA sequence analysis and visualization"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "gront", email = "gront@gront.gront"},
]
keywords = ["genomics", "bioinformatics", "dna", "genome-browser", "vcf", "gtf"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "biopython>=1.80",
    "click>=8.0",
    "coloredlogs>=15.0",
    "cyvcf2>=0.30",
    "matplotlib>=3.5",
    "natsort>=8.0",
    "numpy>=1.20",
    "pandas>=1.3",
    "pillow>=9.0",
    "pyfastx>=2.0",
    "pyranges>=0.1",
    "pysam>=0.20",
    "seaborn>=0.11",
    "tabulate>=0.9",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.20",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]
viz = [
    "plotly>=5.0",
    "bokeh>=2.4",
]

[project.urls]
Homepage = "https://github.com/yourusername/ggene"
Documentation = "https://ggene.readthedocs.io"
Repository = "https://github.com/yourusername/ggene"
"Bug Tracker" = "https://github.com/yourusername/ggene/issues"

[project.scripts]
ggene = "ggene.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ggene*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
ggene = ["*.json", "data/*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["ggene"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cyvcf2.*",
    "pysam.*",
    "pyranges.*",
    "pyfastx.*",
    "matplotlib.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]